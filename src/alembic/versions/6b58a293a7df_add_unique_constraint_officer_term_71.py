"""add_unique_constraint_officer_term_71

Revision ID: 6b58a293a7df
Revises: 243190df5588
Create Date: 2025-09-28 17:13:51.024959

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6b58a293a7df"
down_revision: str | None = "243190df5588"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("election", "type",
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
    op.alter_column("officer_term", "start_date",
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column("officer_term", "end_date",
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.create_unique_constraint(op.f("uq_officer_term_computing_id"), "officer_term", ["computing_id", "position", "start_date"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_officer_term_computing_id"), "officer_term", type_="unique")
    op.alter_column("officer_term", "end_date",
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column("officer_term", "start_date",
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column("election", "type",
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    # ### end Alembic commands ###
